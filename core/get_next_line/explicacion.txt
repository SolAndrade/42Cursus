char *get_next_line(int fd)
Función principal que tiene un static char *buffer y un char *linea.
Se llama a la funcion para leer el archivo, luego para leer la linea, y luego para tener el resto.

buffer = ft_read(fd, buffer);
char *ft_read(int fd, char *buffer);
Para leer el archivo se le hace un calloc a buffer de BUFFER_SIZE + 1 y se empieza a leer desde el byte 1 pq sino da error.
por cada byte se hace el read del fd al buffer con tamaño e BUFFER_SIZE, si da error se libera el buffer.
Se le da el valor del 0 al final por los leaks.
se libera el buffer que e envio por parametro con una funcion para liberar.
si se encuentra un \n en el buffer se hace un break;
Luego de recorrer los bytes se libera el buffer y se retorna el buffer pasado por parametro.
En la funcion del ft_free se crea un char *temporal al que se le hace un strjoin del buffer(de la funcion principal, eitado en la funciond de ft_read) y el buf(buffer creado en la funcion de ft_read) pasados por parametros y luego s libera y se retorna el temporal.

line = ft_line(buffer) Para obtener la linea, se envia el buffer de la funcion principal
char *ft_line(char *buffer)
Se recorre hasta encojtrar el \n y se itera para saber el length de la linea.
Se le hace el calloc del length + 2 a la linea, se reinicia el contador y se vuelve a recorrer hasta encontrar el \n pero dandole los caracteeres del buffer a la linea.
Al final se le da el valor de \n y se retorna la linea.

buffer = ft_next(buffer) Para obetener el resto, desde la funcion principal se le da valor a buffer el resultado de la funcion de ft_next(buffer)
char *ft_next(char *buffer);
Hay dos iteradores y el char *line.
Se recorre el buffer hasta el \n y se saca el length
Si da error el buffer se libera
Se le hace el calloc a la linea del ft_strlen(buffer) - lenght de linea + 1
Se incrementa el length
Y mentiras se recorre el buffer se le da valor a la linea(otro iterador++) = buffer(length++);
Se libera el buffer
Se retorna la linea.

FUNCIONES AUXILIARES

char *ft_strjoin(char const *s1, char const *s2);
char *ft_strchr(const char *string, int searchedChar);
void ft_bzero(void *s, size_t n); (para el calloc);
void	*ft_calloc(size_t elementCount, size_t elementSize);
size_t	ft_strlen(const char *theString);